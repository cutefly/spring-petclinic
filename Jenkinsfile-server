#!groovy

pipeline {
  agent none
  stages {
    stage('Maven Install') {
      agent {
        docker {
          image 'maven:3.9.8-eclipse-temurin-17'
          args '-v /home/ubuntu/.m2:/root/.m2'
        }
      }
      steps {
        sh 'mvn --version'
        sh 'pwd'
        sh 'env'
        // sh 'ls -al /home/jenkins/.m2/repository'
        // sh 'mvn -Dmaven.repo.local=/home/ubuntu/.m2/repository -Dmaven.test.skip=true clean package'
        sh 'mvn -Dmaven.test.skip=true clean package'
        sh 'ls -al'
        sh 'ls -al target/'
      }
    }
    stage('Deploy') {
      agent any
      steps {
        script {
            sh 'pwd'
            sh 'env'
            sh 'ls -al'
            sh 'ls -al target/'
            // 파일 전송
          sshPublisher(
            failOnError: true,
            publishers: [
              sshPublisherDesc(
                configName: 'amd-ubuntu-linux',
                verbose: true,
                transfers: [
                  sshTransfer(
                    cleanRemote:false,
                    sourceFiles: 'target/spring-petclinic-3.3.0-SNAPSHOT.jar',
                    removePrefix: 'target',
                    remoteDirectory: './deployRoot/',
                  ),
                  sshTransfer(
                    execCommand: 'cd deployRoot && echo java -jar spring-petclinic-3.3.0-SNAPSHOT.jar > /dev/null 2>&1 &'
                  )
                ]
              )
            ]
          )
        }
      }
    }
  }
}
