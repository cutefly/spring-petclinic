#!groovy

pipeline {
  environment {
    MAVEN_CLI_OPTS = "--batch-mode"
    MAVEN_OPTS = "-Dmaven.repo.local=/.m2/repository"
  }
  stages {
    stage('Maven Install') {
      agent {
        docker {
          image 'maven:3.9.8-eclipse-temurin-17'
          args '-v $HOME/.m2:/.m2'
          label 'agent02'
        } // docker
      } // agent
      steps {
        script {
          sh 'mvn --version'
          sh 'pwd'
          sh 'env'
          sh 'ls -al'
          sh 'ls -al /.m2/repository'
          sh 'mvn $MAVEN_OPTS -Dmaven.test.skip=true -Dcheckstyle.skip=true clean package'
          sh 'ls -al target/'
            // 파일 전송
          sshPublisher(
            failOnError: true,
            publishers: [
              sshPublisherDesc(
                configName: 'amd-ubuntu-linux',
                verbose: true,
                transfers: [
                  sshTransfer(
                    cleanRemote:false,
                    sourceFiles: 'target/spring-petclinic-3.3.0-SNAPSHOT.jar',
                    removePrefix: 'target',
                    remoteDirectory: './deployRoot/',
                  ),
                  sshTransfer(
                    execCommand: 'cd deployRoot && echo java -jar spring-petclinic-3.3.0-SNAPSHOT.jar > /dev/null 2>&1 &'
                  )
                ]
              )
            ]
          )
        } // script
      } // steps
      post {
        always {
          // One or more steps need to be included within each condition's block.
          cleanWs()
        } // post
      }
    } // stage
  } // stages
} // pipeline
